using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Lab01_02
{
    class Student
    {
        private string studentID;
        private string fullName;
        private float averageScore;
        private string faculty;

        public string StudentID { get => studentID; set => studentID = value; }
        public string FullName { get => fullName; set => fullName = value; }
        public float AverageScore { get => averageScore; set => averageScore = value; }
        public string Faculty { get => faculty; set => faculty = value; }

        public Student() { }

        public Student(string studentID, string fullName, float averageScore, string faculty)
        {
            this.studentID = studentID;
            this.fullName = fullName;
            this.averageScore = averageScore;
            this.faculty = faculty;
        }

        public void Input()
        {
            Console.WriteLine("Nhap mssv:");
            StudentID = Console.ReadLine();
            Console.WriteLine("Nhap ho ten Sinh vien: ");
            FullName = Console.ReadLine();
            Console.WriteLine("Nhap diem TB:");
            AverageScore = float.Parse(Console.ReadLine());

            Console.WriteLine("Nhap Khoa:");
            Faculty = Console.ReadLine();
        }
        public void Show()
        {
            Console.WriteLine("MSSV:{0} Ho Ten:{1} Khoa:{2} DiemTB:{3}", this.StudentID, this.FullName, this.Faculty, this.AverageScore);
        }
    }

    
    internal class Program
    {
        static void Main(string[] args)
        {
            List<Student> studentList = new List<Student>();

            bool exit = false;
            while (!exit)
            {
                Console.WriteLine("=== Menu ===");
                Console.WriteLine("1.  Them sinh vien");
                Console.WriteLine("2.  Hien thi danh sach sinh vien");
                Console.WriteLine("3.  Thong tin sinh vien thuoc khoa CNTT");
                Console.WriteLine("4.  Thong tin sinh vien co diem TB lon hon bang 5.");
                Console.WriteLine("5.  Danh sach sinh vien duoc sap xep theo diem trung binh tang dan");
                Console.WriteLine("6.  Danh sach sinh vien co diem TB lon hon bang 5 va thuoc khoa CNTT");
                Console.WriteLine("7.  Danh sach sinh vien co diem trung binh cao nhat va thuoc khoa CNTT");
                Console.WriteLine("8.  So Luong cua tung xep loai trong danh sach");
                Console.WriteLine("0.  Thoat");
                Console.WriteLine("Chon chuc nang (0-8): ");

                string choice = Console.ReadLine();
                switch (choice)
                {
                    case "1":
                        AddStudent(studentList);
                        break;
                    case "2":
                        DisplayStudentList(studentList);
                        break;
                    case "0":
                        exit = true;
                        Console.WriteLine("Ket thuc chuong trinh.");
                        break;
                    case "3":
                        DisplayStudentsByFaculty(studentList, "CNTT");
                        break;
                    case "4":
                        DisplayStudentsWithHighAverageScore(studentList, 5);
                        break;
                    case "5":
                        SortStudentsByAverageScore(studentList);
                        break;
                    case "6":
                        DisplayStudentsByFacultyAndScore(studentList, "CNTT", 5);
                        break;
                    case "7":
                        DisplayStudentsWithHighestAverageScoreByFaculty(studentList, "CNTT");
                        break;
                    case "8":
                        CountStudentsByGrade(studentList);
                        break;
                    default:
                        Console.WriteLine("Tuy chon k hop le. Vui long chon lai.");
                        break;
                }
                Console.WriteLine();
            }
        }

        static void AddStudent(List<Student> studentList)
        {
            Console.WriteLine("=== Nhap thong tin sinh vien ===");
            Student student = new Student();
            student.Input();
            studentList.Add(student);
            Console.WriteLine("Them sinh vien thanh cong!");
        }

        static void DisplayStudentList(List<Student> studentList)
        {
            Console.WriteLine("=== Danh sach chi tiet thong tin sinh vien ===");
            foreach (Student student in studentList)
            {
                student.Show();
            }
        }

        static void DisplayStudentsByFaculty(List<Student> studentList, string faculty)
        {
            Console.WriteLine("=== Danh sach sinh vien thuoc khoa {0}", faculty);
            var students = studentList.Where(s => s.Faculty.Equals(faculty, StringComparison.OrdinalIgnoreCase));
            DisplayStudentList(studentList);
        }

        static void DisplayStudentsWithHighAverageScore(List<Student> studentList, float minDTB)
        {
            Console.WriteLine("=== Danh sach sinh vien co diem TB >= {0}", minDTB);
            var students = studentList.Where(s => s.AverageScore >= minDTB);
            DisplayStudentList(studentList);
        }

        static void SortStudentsByAverageScore(List<Student> studentList)
        {
            Console.WriteLine("=== Danh sach sien vien duoc sap xep theo diem trung binh tang dan ===");
            var sortedStudents = studentList.OrderBy(s => s.AverageScore).ToList();
            DisplayStudentList(sortedStudents);
        }

        static void DisplayStudentsByFacultyAndScore(List<Student> studentList, string faculty, float minDTB)
        {
            Console.WriteLine("=== Danh sach sinh vien co diem TB >= {0} va thuoc khoa {1}", minDTB, faculty);
            var students = studentList.Where(s=>s.AverageScore >= minDTB && s.Faculty.Equals(faculty, StringComparison.OrdinalIgnoreCase)).ToList();
            DisplayStudentList(students);
        }

        static void DisplayStudentsWithHighestAverageScoreByFaculty(List<Student> studentList, string faculty)
        {
            Console.WriteLine("=== Sinh vien co diem trung binh cao nhat khoa {0} ===", faculty);

            
            var topStudent = studentList
                .Where(s => s.Faculty.Equals(faculty, StringComparison.OrdinalIgnoreCase))
                .OrderByDescending(s => s.AverageScore)
                .FirstOrDefault();

            topStudent.Show();
        }
        static void CountStudentsByGrade(List<Student> studentList)
        {
            Console.WriteLine("=== Thong ke so luong sinh vien theo xep loai ===");

            int xuatSac = 0, gioi = 0, kha = 0, trungBinh = 0, yeu = 0, kem = 0;

            foreach (var student in studentList)
            {
                if (student.AverageScore >= 9.0f && student.AverageScore <= 10.0f)
                    xuatSac++;
                else if (student.AverageScore >= 8.0f && student.AverageScore < 9.0f)
                    gioi++;
                else if (student.AverageScore >= 7.0f && student.AverageScore < 8.0f)
                    kha++;
                else if (student.AverageScore >= 5.0f && student.AverageScore < 7.0f)
                    trungBinh++;
                else if (student.AverageScore >= 4.0f && student.AverageScore < 5.0f)
                    yeu++;
                else if (student.AverageScore < 4.0f)
                    kem++;
            }

            Console.WriteLine("Xuat sac: {0} sinh vien", xuatSac);
            Console.WriteLine("Gioi: {0} sinh vien", gioi);
            Console.WriteLine("Kha: {0} sinh vien", kha);
            Console.WriteLine("Trung binh: {0} sinh vien", trungBinh);
            Console.WriteLine("Yeu: {0} sinh vien", yeu);
            Console.WriteLine("Kem: {0} sinh vien", kem);
        }
    }
}
