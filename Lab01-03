using System;
using System.Collections.Generic;
using System.Linq;

namespace Lab01_03
{
    
    public class Person
    {
        public string Id { get; set; }
        public string FullName { get; set; }

        public Person() { }

        public Person(string id, string fullName)
        {
            Id = id;
            FullName = fullName;
        }

        public virtual void Input()
        {
            Console.Write("Nhap ma so: ");
            Id = Console.ReadLine();
            Console.Write("Nhap ho ten: ");
            FullName = Console.ReadLine();
        }

        public virtual void Display()
        {
            Console.WriteLine($"MS: {Id}, Ho Ten: {FullName}");
        }
    }

    
    public class Student : Person
    {
        public float AverageScore { get; set; }
        public string Faculty { get; set; }

        public Student() { }

        public Student(string id, string fullName, float averageScore, string faculty)
            : base(id, fullName)
        {
            AverageScore = averageScore;
            Faculty = faculty;
        }

        public override void Input()
        {
            base.Input();
            Console.Write("Nhap diem TB: ");
            AverageScore = float.Parse(Console.ReadLine());
            Console.Write("Nhap khoa: ");
            Faculty = Console.ReadLine();
        }

        public override void Display()
        {
            Console.WriteLine($"MSSV: {Id}, Ho Ten: {FullName}, Khoa: {Faculty}, DiemTB: {AverageScore}");
        }

        public string GetGrade()
        {
            if (AverageScore >= 9.0f) return "Xuat sac";
            if (AverageScore >= 8.0f) return "Gioi";
            if (AverageScore >= 7.0f) return "Kha";
            if (AverageScore >= 5.0f) return "Trung binh";
            if (AverageScore >= 4.0f) return "Yeu";
            return "Kem";
        }
    }

  
    public class Teacher : Person
    {
        public string Address { get; set; }

        public Teacher() { }

        public Teacher(string id, string fullName, string address)
            : base(id, fullName)
        {
            Address = address;
        }

        public override void Input()
        {
            base.Input();
            Console.Write("Nhap dia chi: ");
            Address = Console.ReadLine();
        }

        public override void Display()
        {
            Console.WriteLine($"MSGV: {Id}, Ho Ten: {FullName}, Dia chi: {Address}");
        }
    }

    internal class Program
    {
        static List<Student> studentList = new List<Student>();
        static List<Teacher> teacherList = new List<Teacher>();

        static void Main(string[] args)
        {
            bool exit = false;
            while (!exit)
            {
                Console.WriteLine("=== MENU ===");
                Console.WriteLine("1. Them sinh vien");
                Console.WriteLine("2. Them giao vien");
                Console.WriteLine("3. Xuat danh sach sinh vien");
                Console.WriteLine("4. Xuat danh sach giao vien");
                Console.WriteLine("5. So luong tung danh sach");
                Console.WriteLine("6. SV khoa CNTT");
                Console.WriteLine("7. GV co dia chi 'Quan 9'");
                Console.WriteLine("8. SV diem cao nhat khoa CNTT");
                Console.WriteLine("9. Thong ke xep loai SV");
                Console.WriteLine("0. Thoat");
                Console.Write("Chon chuc nang (0-9): ");

                string choice = Console.ReadLine();
                switch (choice)
                {
                    case "1":
                        AddStudent();
                        break;
                    case "2": 
                        AddTeacher(); 
                        break;
                    case "3": 
                        DisplayStudents(); 
                        break;
                    case "4": 
                        DisplayTeachers(); 
                        break;
                    case "5": 
                        DisplayCounts(); 
                        break;
                    case "6": 
                        DisplayStudentsByFaculty("CNTT"); 
                        break;
                    case "7": 
                        DisplayTeachersByAddress("Quan 9");
                        break;
                    case "8": 
                        DisplayTopStudentsByFaculty("CNTT"); 
                        break;
                    case "9": 
                        CountStudentsByGrade(); 
                        break;
                    case "0": 
                        exit = true; 
                        break;
                    default: Console.WriteLine("Lua chon khong hop le!"); break;
                }
                Console.WriteLine();
            }
        }

        static void AddStudent()
        {
            Console.WriteLine("=== THEM SINH VIEN ===");
            Student student = new Student();
            student.Input();
            studentList.Add(student);
            Console.WriteLine("Them sinh vien thanh cong!");
        }

        static void AddTeacher()
        {
            Console.WriteLine("=== THEM GIAO VIEN ===");
            Teacher teacher = new Teacher();
            teacher.Input();
            teacherList.Add(teacher);
            Console.WriteLine("Them giao vien thanh cong!");
        }

        static void DisplayStudents()
        {
            Console.WriteLine("=== DANH SACH SINH VIEN ===");
            foreach (var student in studentList)
            {
                student.Display();
            }
        }

        static void DisplayTeachers()
        {
            Console.WriteLine("=== DANH SACH GIAO VIEN ===");
            foreach (var teacher in teacherList)
            {
                teacher.Display();
            }
        }

        static void DisplayCounts()
        {
            Console.WriteLine("=== SO LUONG ===");
            Console.WriteLine($"Tong so sinh vien: {studentList.Count}");
            Console.WriteLine($"Tong so giao vien: {teacherList.Count}");
        }

        static void DisplayStudentsByFaculty(string faculty)
        {
            Console.WriteLine($"=== SINH VIEN KHOA {faculty} ===");
            var students = studentList.Where(s => s.Faculty.Equals(faculty, StringComparison.OrdinalIgnoreCase));
            foreach (var student in students)
            {
                student.Display();
            }
        }

        static void DisplayTeachersByAddress(string address)
        {
            Console.WriteLine($"=== GIAO VIEN CO DIA CHI '{address}' ===");
            var teachers = teacherList.Where(t => t.Address.Equals(address, StringComparison.OrdinalIgnoreCase));
            foreach (var teacher in teachers)
            {
                teacher.Display();
            }
        }

        static void DisplayTopStudentsByFaculty(string faculty)
        {
            Console.WriteLine($"=== SINH VIEN DIEM CAO NHAT KHOA {faculty} ===");
            var topStudents = studentList
                .Where(s => s.Faculty.Equals(faculty, StringComparison.OrdinalIgnoreCase))
                .OrderByDescending(s => s.AverageScore)
                .ToList();

            if (topStudents.Any())
            {
                float maxScore = topStudents.First().AverageScore;
                var topStudentsList = topStudents.Where(s => s.AverageScore == maxScore);

                foreach (var student in topStudentsList)
                {
                    student.Display();
                }
            }
        }

        static void CountStudentsByGrade()
        {
            Console.WriteLine("=== Thong ke so luong sinh vien theo xep loai ===");

            int xuatSac = 0, gioi = 0, kha = 0, trungBinh = 0, yeu = 0, kem = 0;

            foreach (var student in studentList)
            {
                if (student.AverageScore >= 9.0f && student.AverageScore <= 10.0f)
                    xuatSac++;
                else if (student.AverageScore >= 8.0f && student.AverageScore < 9.0f)
                    gioi++;
                else if (student.AverageScore >= 7.0f && student.AverageScore < 8.0f)
                    kha++;
                else if (student.AverageScore >= 5.0f && student.AverageScore < 7.0f)
                    trungBinh++;
                else if (student.AverageScore >= 4.0f && student.AverageScore < 5.0f)
                    yeu++;
                else if (student.AverageScore < 4.0f)
                    kem++;
            }

            Console.WriteLine("Xuat sac: {0} sinh vien", xuatSac);
            Console.WriteLine("Gioi: {0} sinh vien", gioi);
            Console.WriteLine("Kha: {0} sinh vien", kha);
            Console.WriteLine("Trung binh: {0} sinh vien", trungBinh);
            Console.WriteLine("Yeu: {0} sinh vien", yeu);
            Console.WriteLine("Kem: {0} sinh vien", kem);
        }
    }
}
